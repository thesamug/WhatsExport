{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/AppFooter.tsx"],"sourcesContent":["import { Button } from '@/components/ui/button';\nimport { UserCircle2, Settings2 } from 'lucide-react';\n\nexport function AppFooter() {\n  return (\n    <footer className=\"bg-card border-t p-3 flex items-center justify-between sticky bottom-0 z-10\">\n      <span className=\"text-xs text-muted-foreground\">&copy; {new Date().getFullYear()} WhatsExport</span>\n      <div className=\"flex items-center gap-2\">\n        <Button variant=\"ghost\" size=\"icon\" aria-label=\"Account\">\n          <UserCircle2 className=\"h-5 w-5\" />\n        </Button>\n        <Button variant=\"ghost\" size=\"icon\" aria-label=\"Settings\">\n          <Settings2 className=\"h-5 w-5\" />\n        </Button>\n      </div>\n    </footer>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;;;;AAEO,SAAS;IACd,qBACE,6LAAC;QAAO,WAAU;;0BAChB,6LAAC;gBAAK,WAAU;;oBAAgC;oBAAQ,IAAI,OAAO,WAAW;oBAAG;;;;;;;0BACjF,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,qIAAA,CAAA,SAAM;wBAAC,SAAQ;wBAAQ,MAAK;wBAAO,cAAW;kCAC7C,cAAA,6LAAC,+NAAA,CAAA,cAAW;4BAAC,WAAU;;;;;;;;;;;kCAEzB,6LAAC,qIAAA,CAAA,SAAM;wBAAC,SAAQ;wBAAQ,MAAK;wBAAO,cAAW;kCAC7C,cAAA,6LAAC,mNAAA,CAAA,YAAS;4BAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;AAK/B;KAdgB","debugId":null}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 263, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/chart.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 598, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/InsightDisplay.tsx"],"sourcesContent":["// src/components/InsightDisplay.tsx\n'use client';\n\nimport { BarChart, PieChart as RechartsPieChart, Pie, Cell, ResponsiveContainer, XAxis, YAxis, Tooltip, Legend, CartesianGrid, Bar } from 'recharts';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { ChartConfig, ChartContainer, ChartTooltip, ChartTooltipContent } from \"@/components/ui/chart\"\nimport type { DashboardInsights } from '@/types';\nimport { Users, MessageSquareText, Clock, UsersRound } from 'lucide-react';\n\ninterface InsightDisplayProps {\n  insights: DashboardInsights | null;\n  isLoading: boolean;\n}\n\nconst COLORS = ['hsl(var(--chart-1))', 'hsl(var(--chart-2))', 'hsl(var(--chart-3))', 'hsl(var(--chart-4))', 'hsl(var(--chart-5))'];\n\nexport function InsightDisplay({ insights, isLoading }: InsightDisplayProps) {\n  if (isLoading) {\n    return (\n      <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\n        {[...Array(4)].map((_, i) => (\n          <Card key={i} className=\"shadow-md animate-pulse\">\n            <CardHeader>\n              <div className=\"h-6 bg-muted rounded w-3/4\"></div>\n            </CardHeader>\n            <CardContent>\n              <div className=\"h-40 bg-muted rounded\"></div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n    );\n  }\n\n  if (!insights) {\n    return <p className=\"text-muted-foreground text-center py-8\">Click \"Generate Insights\" to see your contact communication analysis.</p>;\n  }\n  \n  const frequentContactsChartData = insights.frequentContacts.slice(0, 5).map(fc => ({ name: fc.name, count: fc.count }));\n  const frequentContactsChartConfig = {\n    count: {\n      label: \"Messages\",\n      color: \"hsl(var(--chart-1))\",\n    },\n  } satisfies ChartConfig\n\n  const topicBreakdownChartData = insights.topicBreakdown.slice(0, 5).map(tb => ({ name: tb.topic, value: tb.count }));\n   const topicBreakdownChartConfig = {\n    topics: {\n      label: \"Topics\",\n    },\n    ...topicBreakdownChartData.reduce((acc, cur, idx) => {\n      acc[cur.name] = { label: cur.name, color: COLORS[idx % COLORS.length] };\n      return acc;\n    }, {} as ChartConfig)\n  } satisfies ChartConfig;\n\n\n  return (\n    <div className=\"grid gap-6 md:grid-cols-2\">\n      <Card className=\"shadow-md\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center\"><Users className=\"mr-2 h-5 w-5 text-primary\" />Frequent Contacts</CardTitle>\n          <CardDescription>Top 5 most contacted individuals.</CardDescription>\n        </CardHeader>\n        <CardContent>\n          {frequentContactsChartData.length > 0 ? (\n            <ChartContainer config={frequentContactsChartConfig} className=\"min-h-[200px] w-full\">\n              <BarChart accessibilityLayer data={frequentContactsChartData} layout=\"vertical\" margin={{ right: 20 }}>\n                <CartesianGrid horizontal={false} />\n                <XAxis type=\"number\" dataKey=\"count\" />\n                <YAxis type=\"category\" dataKey=\"name\" tickLine={false} axisLine={false} width={80} />\n                <ChartTooltip content={<ChartTooltipContent hideLabel />} />\n                <Legend />\n                <Bar dataKey=\"count\" fill=\"var(--color-count)\" radius={4} />\n              </BarChart>\n            </ChartContainer>\n          ) : <p className=\"text-muted-foreground\">Not enough data.</p>}\n        </CardContent>\n      </Card>\n\n      <Card className=\"shadow-md\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center\"><MessageSquareText className=\"mr-2 h-5 w-5 text-primary\" />Topic Breakdown</CardTitle>\n          <CardDescription>Common themes in your conversations.</CardDescription>\n        </CardHeader>\n        <CardContent>\n         {topicBreakdownChartData.length > 0 ? (\n           <ChartContainer config={topicBreakdownChartConfig} className=\"mx-auto aspect-square max-h-[250px]\">\n              <RechartsPieChart>\n                <ChartTooltip content={<ChartTooltipContent nameKey=\"name\" hideLabel />} />\n                <Pie data={topicBreakdownChartData} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={80} label>\n                  {topicBreakdownChartData.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                  ))}\n                </Pie>\n                 <Legend content={({ payload }) => (\n                    <ul className=\"flex flex-wrap justify-center gap-2 mt-4\">\n                      {payload?.map((entry, index) => (\n                        <li key={`item-${index}`} className=\"flex items-center text-xs\">\n                          <span style={{ backgroundColor: entry.color }} className=\"inline-block w-3 h-3 mr-1 rounded-sm\"></span>\n                          {entry.value} ({ (topicBreakdownChartData.find(d => d.name === entry.value)?.value || 0) })\n                        </li>\n                      ))}\n                    </ul>\n                  )} />\n              </RechartsPieChart>\n            </ChartContainer>\n         ) : <p className=\"text-muted-foreground\">Not enough data.</p>}\n        </CardContent>\n      </Card>\n\n      <Card className=\"shadow-md\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center\"><Clock className=\"mr-2 h-5 w-5 text-primary\" />Average Response Time</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <p className=\"text-2xl font-semibold\">{insights.averageResponseTime || 'N/A'}</p>\n        </CardContent>\n      </Card>\n\n      <Card className=\"shadow-md\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center\"><UsersRound className=\"mr-2 h-5 w-5 text-primary\" />Suggested Groups</CardTitle>\n          <CardDescription>Potential contact groups based on patterns.</CardDescription>\n        </CardHeader>\n        <CardContent>\n          {insights.suggestedGroups && insights.suggestedGroups.length > 0 ? (\n            <ul className=\"list-disc pl-5 space-y-1\">\n              {insights.suggestedGroups.map((group, index) => (\n                <li key={index}>{group}</li>\n              ))}\n            </ul>\n          ) : (\n            <p className=\"text-muted-foreground\">No group suggestions available.</p>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1119, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/actions.ts"],"sourcesContent":["'use server';\n\nimport { generateInsightsDashboard } from '@/ai/flows/generate-insights-dashboard';\nimport type { GenerateInsightsDashboardInput, GenerateInsightsDashboardOutput } from '@/ai/flows/generate-insights-dashboard';\nimport type { Contact } from '@/types';\n\nexport async function getDashboardInsightsAction(\n  contacts: Contact[]\n): Promise<GenerateInsightsDashboardOutput | { error: string }> {\n  if (!contacts || contacts.length === 0) {\n    return { error: 'No contact data provided to generate insights.' };\n  }\n\n  // Prepare a simplified string representation of contact data for the AI\n  // This can be customized based on what aspects of contacts are most relevant for insights\n  const contactDataSummary = contacts.map(c => ({\n    name: c.name,\n    labels: c.labels,\n    country: c.countryCode,\n    lastContacted: c.lastContacted.toISOString().split('T')[0], // YYYY-MM-DD format\n  }));\n  \n  const input: GenerateInsightsDashboardInput = {\n    contactData: `User has ${contacts.length} contacts. Here's a sample of their data (name, labels, country, lastContacted):\\n${JSON.stringify(contactDataSummary.slice(0, 10))}\\nAnalyze communication patterns, frequent contacts, topics, and suggest groups.`,\n  };\n\n  try {\n    const insights = await generateInsightsDashboard(input);\n    return insights;\n  } catch (error) {\n    console.error('Error generating insights:', error);\n    return { error: 'Failed to generate insights. Please try again.' };\n  }\n}\n"],"names":[],"mappings":";;;;;IAMsB","debugId":null}},
    {"offset": {"line": 1131, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/types/index.ts"],"sourcesContent":["import type { GenerateInsightsDashboardOutput } from '@/ai/flows/generate-insights-dashboard';\n\nexport interface Contact {\n  id: string;\n  name: string;\n  phoneNumber: string;\n  countryCode: string;\n  labels: string[];\n  lastContacted: Date;\n  avatarUrl?: string;\n}\n\nexport interface Filters {\n  countryCode: string;\n  labels: string[];\n  lastContactedDate: Date | undefined;\n}\n\nexport const MOCK_LABELS = [\"Work\", \"Friends\", \"Family\", \"Important\", \"Leads\", \"New\"];\n\nexport const MOCK_COUNTRY_CODES = [\n  { label: \"All Countries\", value: \"__ALL__\" }, // Changed value from \"\" to \"__ALL__\"\n  { label: \"USA (+1)\", value: \"+1\" },\n  { label: \"UK (+44)\", value: \"+44\" },\n  { label: \"India (+91)\", value: \"+91\" },\n  { label: \"Germany (+49)\", value: \"+49\" },\n  { label: \"Brazil (+55)\", value: \"+55\" },\n];\n\nexport type DashboardInsights = GenerateInsightsDashboardOutput;\n"],"names":[],"mappings":";;;;AAkBO,MAAM,cAAc;IAAC;IAAQ;IAAW;IAAU;IAAa;IAAS;CAAM;AAE9E,MAAM,qBAAqB;IAChC;QAAE,OAAO;QAAiB,OAAO;IAAU;IAC3C;QAAE,OAAO;QAAY,OAAO;IAAK;IACjC;QAAE,OAAO;QAAY,OAAO;IAAM;IAClC;QAAE,OAAO;QAAe,OAAO;IAAM;IACrC;QAAE,OAAO;QAAiB,OAAO;IAAM;IACvC;QAAE,OAAO;QAAgB,OAAO;IAAM;CACvC","debugId":null}},
    {"offset": {"line": 1178, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/data/mockContacts.ts"],"sourcesContent":["import type { Contact } from '@/types';\nimport { MOCK_LABELS, MOCK_COUNTRY_CODES } from '@/types';\n\nfunction getRandomDate(start: Date, end: Date): Date {\n  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\n}\n\nfunction getRandomElements<T>(arr: T[], count: number): T[] {\n  const shuffled = [...arr].sort(() => 0.5 - Math.random());\n  return shuffled.slice(0, count);\n}\n\nconst names = [\"Alice Smith\", \"Bob Johnson\", \"Charlie Brown\", \"Diana Prince\", \"Edward Green\", \"Fiona Apple\", \"George Harrison\", \"Helen Troy\", \"Ivan Drago\", \"Julia Roberts\", \"Kevin Bacon\", \"Linda Hamilton\", \"Michael Jordan\", \"Nancy Drew\", \"Oliver Twist\", \"Patricia Arquette\", \"Quincy Jones\", \"Rachel Green\", \"Steven Spielberg\", \"Tina Turner\"];\nconst phonePrefixes = [\"555-010\", \"555-020\", \"555-030\", \"555-040\", \"555-050\"];\n\nexport const mockContacts: Contact[] = Array.from({ length: 20 }, (_, i) => {\n  const name = names[i % names.length];\n  const country = MOCK_COUNTRY_CODES[(i % (MOCK_COUNTRY_CODES.length -1)) + 1]; // Avoid \"All Countries\"\n  return {\n    id: `contact_${i + 1}`,\n    name: name,\n    phoneNumber: `${phonePrefixes[i % phonePrefixes.length]}${i % 10}`,\n    countryCode: country.value,\n    labels: getRandomElements(MOCK_LABELS, Math.floor(Math.random() * 3) + 1), // 1 to 3 labels\n    lastContacted: getRandomDate(new Date(2023, 0, 1), new Date()),\n    avatarUrl: `https://placehold.co/40x40.png?text=${name.substring(0,1)}`,\n  };\n});\n"],"names":[],"mappings":";;;AACA;;AAEA,SAAS,cAAc,KAAW,EAAE,GAAS;IAC3C,OAAO,IAAI,KAAK,MAAM,OAAO,KAAK,KAAK,MAAM,KAAK,CAAC,IAAI,OAAO,KAAK,MAAM,OAAO,EAAE;AACpF;AAEA,SAAS,kBAAqB,GAAQ,EAAE,KAAa;IACnD,MAAM,WAAW;WAAI;KAAI,CAAC,IAAI,CAAC,IAAM,MAAM,KAAK,MAAM;IACtD,OAAO,SAAS,KAAK,CAAC,GAAG;AAC3B;AAEA,MAAM,QAAQ;IAAC;IAAe;IAAe;IAAiB;IAAgB;IAAgB;IAAe;IAAmB;IAAc;IAAc;IAAiB;IAAe;IAAkB;IAAkB;IAAc;IAAgB;IAAqB;IAAgB;IAAgB;IAAoB;CAAc;AACrV,MAAM,gBAAgB;IAAC;IAAW;IAAW;IAAW;IAAW;CAAU;AAEtE,MAAM,eAA0B,MAAM,IAAI,CAAC;IAAE,QAAQ;AAAG,GAAG,CAAC,GAAG;IACpE,MAAM,OAAO,KAAK,CAAC,IAAI,MAAM,MAAM,CAAC;IACpC,MAAM,UAAU,wHAAA,CAAA,qBAAkB,CAAC,AAAC,IAAI,CAAC,wHAAA,CAAA,qBAAkB,CAAC,MAAM,GAAE,CAAC,IAAK,EAAE,EAAE,wBAAwB;IACtG,OAAO;QACL,IAAI,CAAC,QAAQ,EAAE,IAAI,GAAG;QACtB,MAAM;QACN,aAAa,GAAG,aAAa,CAAC,IAAI,cAAc,MAAM,CAAC,GAAG,IAAI,IAAI;QAClE,aAAa,QAAQ,KAAK;QAC1B,QAAQ,kBAAkB,wHAAA,CAAA,cAAW,EAAE,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,KAAK;QACvE,eAAe,cAAc,IAAI,KAAK,MAAM,GAAG,IAAI,IAAI;QACvD,WAAW,CAAC,oCAAoC,EAAE,KAAK,SAAS,CAAC,GAAE,IAAI;IACzE;AACF","debugId":null}},
    {"offset": {"line": 1245, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/insights/page.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport Link from 'next/link';\nimport { AppHeader } from '@/components/AppHeader';\nimport { AppFooter } from '@/components/AppFooter';\nimport { InsightDisplay } from '@/components/InsightDisplay';\nimport { Button } from '@/components/ui/button';\nimport { ArrowLeft, Sparkles } from 'lucide-react';\nimport { getDashboardInsightsAction } from '@/lib/actions';\nimport type { DashboardInsights } from '@/types';\nimport { mockContacts } from '@/data/mockContacts'; // Using mock contacts to feed the AI\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\n\n\nexport default function InsightsPage() {\n  const [insights, setInsights] = React.useState<DashboardInsights | null>(null);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const { toast } = useToast();\n\n  const handleGenerateInsights = async () => {\n    setIsLoading(true);\n    setInsights(null);\n    // In a real scenario, you'd pass actual scanned/filtered contacts.\n    // For this demo, we use mockContacts.\n    if (mockContacts.length === 0) {\n        toast({\n            title: \"No Contacts\",\n            description: \"Cannot generate insights without contact data. Please 'Scan Contacts' on the main page first.\",\n            variant: \"destructive\",\n        });\n        setIsLoading(false);\n        return;\n    }\n    const result = await getDashboardInsightsAction(mockContacts);\n    setIsLoading(false);\n\n    if ('error' in result) {\n      toast({\n        title: \"Error Generating Insights\",\n        description: result.error,\n        variant: \"destructive\",\n      });\n    } else {\n      setInsights(result);\n      toast({\n        title: \"Insights Generated\",\n        description: \"Successfully analyzed contact data.\",\n      });\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col min-h-screen bg-background\">\n      <div \n        className=\"max-w-3xl w-full mx-auto my-4 md:my-8 bg-card shadow-2xl rounded-lg overflow-hidden flex flex-col\"\n        style={{minHeight: '80vh', maxHeight: '95vh'}}\n      >\n        <header className=\"bg-card border-b p-4 flex items-center justify-between sticky top-0 z-10\">\n            <Button variant=\"ghost\" size=\"icon\" asChild aria-label=\"Back to Home\">\n              <Link href=\"/\">\n                <ArrowLeft className=\"h-5 w-5\" />\n              </Link>\n            </Button>\n            <h1 className=\"text-xl font-semibold text-foreground\">Smart Insights Dashboard</h1>\n            <div className=\"w-9\"></div> {/* Spacer to balance the back button */}\n        </header>\n\n        <main className=\"flex-grow p-4 md:p-6 space-y-6 overflow-y-auto\">\n          <Card className=\"shadow-md\">\n            <CardHeader>\n                <CardTitle className=\"text-lg\">Communication Analysis</CardTitle>\n                <CardDescription>Discover patterns and insights from your WhatsApp contacts.</CardDescription>\n            </CardHeader>\n            <CardContent>\n                <Button onClick={handleGenerateInsights} disabled={isLoading} variant=\"primary\" className=\"w-full sm:w-auto bg-primary text-primary-foreground hover:bg-primary/90\">\n                  <Sparkles className=\"mr-2 h-4 w-4\" />\n                  {isLoading ? 'Generating...' : 'Generate Insights'}\n                </Button>\n            </CardContent>\n          </Card>\n          \n          <InsightDisplay insights={insights} isLoading={isLoading} />\n        </main>\n        <AppFooter />\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAEA,8NAAoD,qCAAqC;AACzF;AACA;;;AAbA;;;;;;;;;;;AAgBe,SAAS;;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAc,AAAD,EAA4B;IACzE,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAc,AAAD,EAAE;IACjD,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IAEzB,MAAM,yBAAyB;QAC7B,aAAa;QACb,YAAY;QACZ,mEAAmE;QACnE,sCAAsC;QACtC,IAAI,8HAAA,CAAA,eAAY,CAAC,MAAM,KAAK,GAAG;YAC3B,MAAM;gBACF,OAAO;gBACP,aAAa;gBACb,SAAS;YACb;YACA,aAAa;YACb;QACJ;QACA,MAAM,SAAS,MAAM,CAAA,GAAA,wHAAA,CAAA,6BAA0B,AAAD,EAAE,8HAAA,CAAA,eAAY;QAC5D,aAAa;QAEb,IAAI,WAAW,QAAQ;YACrB,MAAM;gBACJ,OAAO;gBACP,aAAa,OAAO,KAAK;gBACzB,SAAS;YACX;QACF,OAAO;YACL,YAAY;YACZ,MAAM;gBACJ,OAAO;gBACP,aAAa;YACf;QACF;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,WAAU;YACV,OAAO;gBAAC,WAAW;gBAAQ,WAAW;YAAM;;8BAE5C,6LAAC;oBAAO,WAAU;;sCACd,6LAAC,qIAAA,CAAA,SAAM;4BAAC,SAAQ;4BAAQ,MAAK;4BAAO,OAAO;4BAAC,cAAW;sCACrD,cAAA,6LAAC,+JAAA,CAAA,UAAI;gCAAC,MAAK;0CACT,cAAA,6LAAC,mNAAA,CAAA,YAAS;oCAAC,WAAU;;;;;;;;;;;;;;;;sCAGzB,6LAAC;4BAAG,WAAU;sCAAwC;;;;;;sCACtD,6LAAC;4BAAI,WAAU;;;;;;wBAAY;;;;;;;8BAG/B,6LAAC;oBAAK,WAAU;;sCACd,6LAAC,mIAAA,CAAA,OAAI;4BAAC,WAAU;;8CACd,6LAAC,mIAAA,CAAA,aAAU;;sDACP,6LAAC,mIAAA,CAAA,YAAS;4CAAC,WAAU;sDAAU;;;;;;sDAC/B,6LAAC,mIAAA,CAAA,kBAAe;sDAAC;;;;;;;;;;;;8CAErB,6LAAC,mIAAA,CAAA,cAAW;8CACR,cAAA,6LAAC,qIAAA,CAAA,SAAM;wCAAC,SAAS;wCAAwB,UAAU;wCAAW,SAAQ;wCAAU,WAAU;;0DACxF,6LAAC,6MAAA,CAAA,WAAQ;gDAAC,WAAU;;;;;;4CACnB,YAAY,kBAAkB;;;;;;;;;;;;;;;;;;sCAKvC,6LAAC,uIAAA,CAAA,iBAAc;4BAAC,UAAU;4BAAU,WAAW;;;;;;;;;;;;8BAEjD,6LAAC,kIAAA,CAAA,YAAS;;;;;;;;;;;;;;;;AAIlB;GAzEwB;;QAGJ,+HAAA,CAAA,WAAQ;;;KAHJ","debugId":null}}]
}